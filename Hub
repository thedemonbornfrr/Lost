-- Lost Hub - MM2 + 99 Nights Support with Enhanced Features (FINAL FIXED VERSION)
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")
local TeleportService = game:GetService("TeleportService")
local Lighting = game:GetService("Lighting")

local player = Players.LocalPlayer

-- Game Detection
local MM2_GAME_IDS = {142823291, 335132309}
local NIGHTS_99_GAME_ID = 126509999114328
local NIGHTS_99_LOBBY_ID = 79546208627805
local currentGame = nil

-- Determine which game we're in
local function detectGame()
    for _, gameId in pairs(MM2_GAME_IDS) do
        if game.PlaceId == gameId then
            return "MM2"
        end
    end
    
    if game.PlaceId == NIGHTS_99_GAME_ID then
        return "99NIGHTS"
    end
    
    if game.PlaceId == NIGHTS_99_LOBBY_ID then
        return "99NIGHTS_LOBBY"
    end
    
    return "UNSUPPORTED"
end

currentGame = detectGame()

-- Device Detection
local isMobile = UserInputService.TouchEnabled and not UserInputService.KeyboardEnabled

-- Key System Configuration
local function getKeyForGame(gameType)
    local keys = {
        MM2 = "murder",
        ["99NIGHTS"] = "maskor",
        ["99NIGHTS_LOBBY"] = "maskor"
    }
    return keys[gameType] or "INVALID"
end

local SAVE_KEY = "LostHub_SavedKey_" .. currentGame .. "_" .. player.UserId
local REQUIRED_KEY = getKeyForGame(currentGame)

local function isKeySaved()
    if isfile and readfile and isfile(SAVE_KEY .. ".txt") then
        return readfile(SAVE_KEY .. ".txt") == REQUIRED_KEY
    end
    return false
end

local function saveKey()
    if writefile then
        writefile(SAVE_KEY .. ".txt", REQUIRED_KEY)
    end
end

-- Create Enhanced 99 Nights Lobby Screen with OK Button
local function create99NightsLobbyScreen()
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "NightsLobbyScreen"
    screenGui.ResetOnSpawn = false
    screenGui.Parent = player:WaitForChild("PlayerGui")
    
    -- Blur effect
    local blurEffect = Instance.new("BlurEffect")
    blurEffect.Size = 24
    blurEffect.Parent = Lighting
    
    local blurFrame = Instance.new("Frame")
    blurFrame.Size = UDim2.new(1, 0, 1, 0)
    blurFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    blurFrame.BackgroundTransparency = 0.5
    blurFrame.BorderSizePixel = 0
    blurFrame.Parent = screenGui
    
    local mainFrame = Instance.new("Frame")
    mainFrame.Size = isMobile and UDim2.new(0, 400, 0, 300) or UDim2.new(0, 450, 0, 280)
    mainFrame.Position = UDim2.new(0.5, -mainFrame.Size.X.Offset/2, 0.5, -mainFrame.Size.Y.Offset/2)
    mainFrame.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
    mainFrame.BorderSizePixel = 0
    mainFrame.Parent = screenGui
    
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 20)
    corner.Parent = mainFrame
    
    local stroke = Instance.new("UIStroke")
    stroke.Color = Color3.fromRGB(100, 100, 100)
    stroke.Thickness = 2
    stroke.Parent = mainFrame
    
    local title = Instance.new("TextLabel")
    title.Size = UDim2.new(1, -40, 0, 60)
    title.Position = UDim2.new(0, 20, 0, 20)
    title.BackgroundTransparency = 1
    title.Text = "Join the game first"
    title.TextColor3 = Color3.fromRGB(255, 100, 100)
    title.TextSize = isMobile and 28 or 32
    title.Font = Enum.Font.GothamBold
    title.Parent = mainFrame
    
    local message = Instance.new("TextLabel")
    message.Size = UDim2.new(1, -40, 0, 80)
    message.Position = UDim2.new(0, 20, 0, 90)
    message.BackgroundTransparency = 1
    message.Text = "Please join a 99 Nights game to use the script..."
    message.TextColor3 = Color3.fromRGB(255, 255, 255)
    message.TextSize = isMobile and 16 or 18
    message.Font = Enum.Font.Gotham
    message.TextWrapped = true
    message.Parent = mainFrame
    
    -- OK Button
    local okButton = Instance.new("TextButton")
    okButton.Size = UDim2.new(0, 120, 0, 40)
    okButton.Position = UDim2.new(0.5, -60, 1, -70)
    okButton.BackgroundColor3 = Color3.fromRGB(0, 162, 255)
    okButton.Text = "OK"
    okButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    okButton.TextSize = isMobile and 18 or 20
    okButton.Font = Enum.Font.GothamBold
    okButton.Parent = mainFrame
    
    local okCorner = Instance.new("UICorner")
    okCorner.CornerRadius = UDim.new(0, 12)
    okCorner.Parent = okButton
    
    okButton.MouseButton1Click:Connect(function()
        screenGui:Destroy()
        if blurEffect and blurEffect.Parent then
            blurEffect:Destroy()
        end
    end)
    
    return screenGui, blurEffect
end

-- Create unsupported game screen
local function createUnsupportedGameScreen()
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "UnsupportedGameScreen"
    screenGui.ResetOnSpawn = false
    screenGui.Parent = player:WaitForChild("PlayerGui")
    
    -- Blur effect
    local blurEffect = Instance.new("BlurEffect")
    blurEffect.Size = 24
    blurEffect.Parent = Lighting
    
    local blurFrame = Instance.new("Frame")
    blurFrame.Size = UDim2.new(1, 0, 1, 0)
    blurFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    blurFrame.BackgroundTransparency = 0.5
    blurFrame.BorderSizePixel = 0
    blurFrame.Parent = screenGui
    
    local mainFrame = Instance.new("Frame")
    mainFrame.Size = isMobile and UDim2.new(0, 400, 0, 300) or UDim2.new(0, 500, 0, 350)
    mainFrame.Position = UDim2.new(0.5, -mainFrame.Size.X.Offset/2, 0.5, -mainFrame.Size.Y.Offset/2)
    mainFrame.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
    mainFrame.BorderSizePixel = 0
    mainFrame.Parent = screenGui
    
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 20)
    corner.Parent = mainFrame
    
    local stroke = Instance.new("UIStroke")
    stroke.Color = Color3.fromRGB(100, 100, 100)
    stroke.Thickness = 2
    stroke.Parent = mainFrame
    
    local title = Instance.new("TextLabel")
    title.Size = UDim2.new(1, -40, 0, 60)
    title.Position = UDim2.new(0, 20, 0, 20)
    title.BackgroundTransparency = 1
    title.Text = "Game Not Supported"
    title.TextColor3 = Color3.fromRGB(255, 100, 100)
    title.TextSize = isMobile and 28 or 32
    title.Font = Enum.Font.GothamBold
    title.Parent = mainFrame
    
    local message = Instance.new("TextLabel")
    message.Size = UDim2.new(1, -40, 0, 80)
    message.Position = UDim2.new(0, 20, 0, 90)
    message.BackgroundTransparency = 1
    message.Text = "Sorry, this game isn't supported with Lost Hub yet..."
    message.TextColor3 = Color3.fromRGB(255, 255, 255)
    message.TextSize = isMobile and 16 or 18
    message.Font = Enum.Font.Gotham
    message.TextWrapped = true
    message.Parent = mainFrame
    
    local discordBtn = Instance.new("TextButton")
    discordBtn.Size = UDim2.new(0, 140, 0, 50)
    discordBtn.Position = UDim2.new(0.5, -210, 1, -80)
    discordBtn.BackgroundColor3 = Color3.fromRGB(88, 101, 242)
    discordBtn.Text = "Discord"
    discordBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
    discordBtn.TextSize = isMobile and 16 or 18
    discordBtn.Font = Enum.Font.GothamBold
    discordBtn.Parent = mainFrame
    
    local discordCorner = Instance.new("UICorner")
    discordCorner.CornerRadius = UDim.new(0, 12)
    discordCorner.Parent = discordBtn
    
    local mm2Btn = Instance.new("TextButton")
    mm2Btn.Size = UDim2.new(0, 140, 0, 50)
    mm2Btn.Position = UDim2.new(0.5, -70, 1, -80)
    mm2Btn.BackgroundColor3 = Color3.fromRGB(40, 167, 69)
    mm2Btn.Text = "Join MM2"
    mm2Btn.TextColor3 = Color3.fromRGB(255, 255, 255)
    mm2Btn.TextSize = isMobile and 16 or 18
    mm2Btn.Font = Enum.Font.GothamBold
    mm2Btn.Parent = mainFrame
    
    local mm2Corner = Instance.new("UICorner")
    mm2Corner.CornerRadius = UDim.new(0, 12)
    mm2Corner.Parent = mm2Btn
    
    local nightsBtn = Instance.new("TextButton")
    nightsBtn.Size = UDim2.new(0, 140, 0, 50)
    nightsBtn.Position = UDim2.new(0.5, 70, 1, -80)
    nightsBtn.BackgroundColor3 = Color3.fromRGB(138, 43, 226)
    nightsBtn.Text = "Join 99 Nights"
    nightsBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
    nightsBtn.TextSize = isMobile and 16 or 18
    nightsBtn.Font = Enum.Font.GothamBold
    nightsBtn.Parent = mainFrame
    
    local nightsCorner = Instance.new("UICorner")
    nightsCorner.CornerRadius = UDim.new(0, 12)
    nightsCorner.Parent = nightsBtn
    
    discordBtn.MouseButton1Click:Connect(function()
        if setclipboard then
            setclipboard("https://discord.gg/BvYXdXFwjV")
        end
    end)
    
    mm2Btn.MouseButton1Click:Connect(function()
        TeleportService:Teleport(142823291, player)
    end)
    
    nightsBtn.MouseButton1Click:Connect(function()
        TeleportService:Teleport(NIGHTS_99_LOBBY_ID, player)
    end)
    
    return screenGui, blurEffect
end

-- Enhanced Intro Screen
local function createIntroScreen()
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "LostHubIntro"
    screenGui.ResetOnSpawn = false
    screenGui.Parent = player:WaitForChild("PlayerGui")
    
    -- Blur effect
    local blurEffect = Instance.new("BlurEffect")
    blurEffect.Size = 24
    blurEffect.Parent = Lighting
    
    local blurFrame = Instance.new("Frame")
    blurFrame.Size = UDim2.new(1, 0, 1, 0)
    blurFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    blurFrame.BackgroundTransparency = 0.3
    blurFrame.BorderSizePixel = 0
    blurFrame.Parent = screenGui
    
    local mainFrame = Instance.new("Frame")
    mainFrame.Size = UDim2.new(0, 400, 0, 200)
    mainFrame.Position = UDim2.new(0.5, -200, 0.5, -100)
    mainFrame.BackgroundTransparency = 1
    mainFrame.Parent = screenGui
    
    local title = Instance.new("TextLabel")
    title.Size = UDim2.new(1, 0, 0.5, 0)
    title.Position = UDim2.new(0, 0, 0, 0)
    title.BackgroundTransparency = 1
    title.Text = "Lost Hub"
    title.TextColor3 = Color3.fromRGB(255, 255, 255)
    title.TextSize = 48
    title.Font = Enum.Font.GothamBold
    title.TextTransparency = 1
    title.Parent = mainFrame
    
    local subtitle = Instance.new("TextLabel")
    subtitle.Size = UDim2.new(1, 0, 0.5, 0)
    subtitle.Position = UDim2.new(0, 0, 0.5, 0)
    subtitle.BackgroundTransparency = 1
    subtitle.Text = "Made by 生まれ変わった"
    subtitle.TextColor3 = Color3.fromRGB(150, 150, 150)
    subtitle.TextSize = 20
    subtitle.Font = Enum.Font.Gotham
    subtitle.TextTransparency = 1
    subtitle.Parent = mainFrame
    
    -- Animate title
    local titleTween = TweenService:Create(title, TweenInfo.new(1, Enum.EasingStyle.Quad), {TextTransparency = 0})
    titleTween:Play()
    
    -- Animate subtitle with delay
    task.wait(0.5)
    local subtitleTween = TweenService:Create(subtitle, TweenInfo.new(1, Enum.EasingStyle.Quad), {TextTransparency = 0})
    subtitleTween:Play()
    
    -- Wait and fade out
    task.wait(2.5)
    local fadeOutTitle = TweenService:Create(title, TweenInfo.new(0.5, Enum.EasingStyle.Quad), {TextTransparency = 1})
    local fadeOutSubtitle = TweenService:Create(subtitle, TweenInfo.new(0.5, Enum.EasingStyle.Quad), {TextTransparency = 1})
    fadeOutTitle:Play()
    fadeOutSubtitle:Play()
    
    task.wait(0.5)
    screenGui:Destroy()
    if blurEffect and blurEffect.Parent then
        blurEffect:Destroy()
    end
    
    return true
end

-- If 99 Nights lobby, show lobby screen and exit
if currentGame == "99NIGHTS_LOBBY" then
    create99NightsLobbyScreen()
    return
end

-- If unsupported game, show screen and exit
if currentGame == "UNSUPPORTED" then
    createUnsupportedGameScreen()
    return
end

-- Global Variables
local Window = nil
local hubLoaded = false

-- MM2 Specific Functions (UNCHANGED - DO NOT MODIFY)
local function getPlayerRole(plr)
    if not plr or not plr.Character then return "Dead" end
    
    local character = plr.Character
    local backpack = plr:FindFirstChild("Backpack")
    
    local humanoid = character:FindFirstChild("Humanoid")
    if not humanoid or humanoid.Health <= 0 then
        return "Dead"
    end
    
    local hasGun = (character:FindFirstChild("Gun")) or (backpack and backpack:FindFirstChild("Gun"))
    local hasKnife = (character:FindFirstChild("Knife")) or (backpack and backpack:FindFirstChild("Knife"))
    
    if hasGun then
        return "Sheriff"
    elseif hasKnife then
        return "Murderer"
    else
        return "Innocent"
    end
end

-- MM2 Configuration (UNCHANGED - DO NOT MODIFY)
local MM2_CONFIG = {
    TWEEN_SPEED = 1,
    DELAY = 0.05,
    NOCLIP_ENABLED = true,
    PRIORITY_COINS = true,
}

-- MM2 Variables (UNCHANGED - DO NOT MODIFY)
local isCollecting = false
local noclipConnection = nil
local currentTween = nil
local collectLoop = nil
local isAutoShooting = false
local shootConnection = nil

-- MM2 Functions (UNCHANGED - DO NOT MODIFY)
local function enableNoclip()
    if noclipConnection then return end
    
    noclipConnection = RunService.Stepped:Connect(function()
        if player.Character then
            for _, part in pairs(player.Character:GetDescendants()) do
                if part:IsA("BasePart") and part.CanCollide then
                    part.CanCollide = false
                end
            end
        end
    end)
end

local function disableNoclip()
    if noclipConnection then
        noclipConnection:Disconnect()
        noclipConnection = nil
    end
    
    if player.Character then
        for _, part in pairs(player.Character:GetDescendants()) do
            if part:IsA("BasePart") then
                part.CanCollide = true
            end
        end
    end
end

local function findCollectibles()
    local items = {}
    
    for _, obj in pairs(workspace:GetDescendants()) do
        if obj:IsA("Part") then
            local objName = obj.Name:lower()
            
            if objName == "coin" or objName:find("coin") then
                table.insert(items, {obj = obj, type = "coin", priority = 1})
            elseif objName:find("beach") or objName:find("ball") or objName == "beachball" then
                table.insert(items, {obj = obj, type = "beachball", priority = 2})
            end
        end
    end
    
    if MM2_CONFIG.PRIORITY_COINS then
        table.sort(items, function(a, b) return a.priority < b.priority end)
    end
    
    return items
end

local function findDroppedGuns()
    local guns = {}
    
    local normalFolder = workspace:FindFirstChild("Normal")
    if not normalFolder then return guns end
    
    for _, obj in pairs(normalFolder:GetDescendants()) do
        if obj:IsA("Tool") and obj.Name == "Gun" then
            local isOwned = false
            for _, plr in pairs(Players:GetPlayers()) do
                if plr.Character and obj:IsDescendantOf(plr.Character) then
                    isOwned = true
                    break
                end
                if plr.Backpack and obj:IsDescendantOf(plr.Backpack) then
                    isOwned = true
                    break
                end
            end
            
            if not isOwned then
                local handle = obj:FindFirstChild("Handle")
                if handle then
                    table.insert(guns, {
                        tool = obj,
                        handle = handle,
                        position = handle.Position
                    })
                end
            end
        end
    end
    
    return guns
end

local function startOptimizedCollection()
    if isCollecting then return end
    
    isCollecting = true
    enableNoclip()
    
    collectLoop = task.spawn(function()
        while isCollecting do
            local items = findCollectibles()
            
            if #items > 0 then
                local closest = nil
                local shortestDistance = math.huge
                
                if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
                    local playerPos = player.Character.HumanoidRootPart.Position
                    
                    for _, item in pairs(items) do
                        if item.obj and item.obj.Parent then
                            local distance = (playerPos - item.obj.Position).Magnitude
                            if distance < shortestDistance then
                                shortestDistance = distance
                                closest = item
                            end
                        end
                    end
                end
                
                if closest and closest.obj and closest.obj.Parent and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
                    local targetPos = closest.obj.Position + Vector3.new(0, 1, 0)
                    
                    if currentTween then
                        currentTween:Cancel()
                    end
                    
                    local tweenInfo = TweenInfo.new(
                        MM2_CONFIG.TWEEN_SPEED,
                        Enum.EasingStyle.Quad,
                        Enum.EasingDirection.Out,
                        0,
                        false,
                        0
                    )
                    
                    currentTween = TweenService:Create(
                        player.Character.HumanoidRootPart,
                        tweenInfo,
                        {CFrame = CFrame.new(targetPos)}
                    )
                    
                    currentTween:Play()
                end
            end
            
            task.wait(MM2_CONFIG.DELAY)
        end
    end)
end

local function stopCollection()
    isCollecting = false
    disableNoclip()
    
    if currentTween then
        currentTween:Cancel()
        currentTween = nil
    end
    
    if collectLoop then
        task.cancel(collectLoop)
        collectLoop = nil
    end
end

local function findMurderer()
    for _, plr in pairs(Players:GetPlayers()) do
        if plr ~= player and getPlayerRole(plr) == "Murderer" then
            return plr
        end
    end
    return nil
end

local function startAimbot()
    if isAutoShooting then return end
    
    isAutoShooting = true
    enableNoclip()
    
    shootConnection = RunService.Heartbeat:Connect(function()
        if not isAutoShooting then
            shootConnection:Disconnect()
            return
        end
        
        local murderer = findMurderer()
        
        if murderer and murderer.Character and murderer.Character:FindFirstChild("HumanoidRootPart") then
            if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
                local gun = player.Character:FindFirstChild("Gun") or 
                          (player.Backpack and player.Backpack:FindFirstChild("Gun"))
                
                if gun and gun.Parent == player.Backpack then
                    player.Character.Humanoid:EquipTool(gun)
                end
                
                gun = player.Character:FindFirstChild("Gun")
                
                if gun then
                    local murdererPos = murderer.Character.HumanoidRootPart.Position
                    local murdererCFrame = murderer.Character.HumanoidRootPart.CFrame
                    local behindPos = murdererPos - murdererCFrame.LookVector * 10
                    behindPos = behindPos + Vector3.new(0, 2, 0)
                    
                    local tweenInfo = TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
                    local tween = TweenService:Create(
                        player.Character.HumanoidRootPart,
                        tweenInfo,
                        {CFrame = CFrame.lookAt(behindPos, murdererPos)}
                    )
                    tween:Play()
                    
                    gun:Activate()
                end
            end
        end
        
        task.wait(MM2_CONFIG.DELAY)
    end)
end

local function stopAimbot()
    isAutoShooting = false
    disableNoclip()
    
    if shootConnection then
        shootConnection:Disconnect()
        shootConnection = nil
    end
end

-- 99 Nights Enhanced Functions (COMPLETE REWRITE)
local selectedCreature = "Bear"
local selectedItem = ""
local selectedESPCreature = ""
local selectedPlayerForTP = ""
local hitboxSize = 70
local hitboxVisualization = {}
local originalHitboxSizes = {}
local modifiedCreatures = {}
local espEnabled = false
local allESPEnabled = false
local playerESPEnabled = false
local isFlying = false
local flySpeed = 50
local flyConnection = nil
local flyBodyVelocity = nil
local flyBodyPosition = nil
local playerSpeed = 16
local playerJumpPower = 50
local noclipEnabled = false
local noclipConnection99 = nil
local isAutoPlaying = false
local autoCuttingTrees = false
local mapHighlightEnabled = false
local mapHighlight = nil
local currentTweenToTree = nil
local isAutoGrindingGems = false
local autoGemConnection = nil

-- Enhanced ESP system with auto-refresh
local espData = {}
local playerESPData = {}
local espRefreshConnection = nil

-- All creatures from the wiki
local creatureNames = {
    "Arctic Fox", "Mammoth", "The Owl", "Polar Bear", "The Deer",
    "Alien", "Alien Elite", "Cultist", "Crossbow Cultist", 
    "Juggernaut Cultist", "Wolf", "Alpha Wolf", "Bear", "Bunny"
}

-- Dynamic creature scanning
local function scanWorkspaceForCreatures()
    local foundCreatures = {}
    
    for _, obj in pairs(workspace:GetDescendants()) do
        if obj:IsA("Model") and obj:FindFirstChildOfClass("Humanoid") then
            local objName = obj.Name
            local found = false
            
            for _, knownCreature in pairs(creatureNames) do
                if objName:lower():find(knownCreature:lower()) or 
                   objName:lower():find(knownCreature:lower():gsub("the ", "")) or
                   objName:lower():find(knownCreature:lower():gsub(" ", "")) then
                    found = true
                    break
                end
            end
            
            if found and not foundCreatures[objName] then
                foundCreatures[objName] = true
            end
        end
    end
    
    local result = {}
    for name, _ in pairs(foundCreatures) do
        table.insert(result, name)
    end
    
    table.sort(result)
    return result
end

-- Dynamic player scanning
local function scanWorkspaceForPlayers()
    local foundPlayers = {}
    
    for _, plr in pairs(Players:GetPlayers()) do
        if plr ~= player and plr.Character then
            table.insert(foundPlayers, plr.Name)
        end
    end
    
    return foundPlayers
end

-- Enhanced item scanning
local function scanWorkspaceForItems()
    local foundItems = {}
    local itemTypes = {
        "wood", "log", "logs", "stone", "rock", "coin", "gem", "crystal", 
        "berry", "fruit", "meat", "bone", "stick", "branch",
        "mushroom", "herb", "flower", "seed", "nut"
    }
    
    for _, obj in pairs(workspace:GetDescendants()) do
        if obj:IsA("Part") or obj:IsA("Model") then
            local objName = obj.Name:lower()
            
            for _, itemType in pairs(itemTypes) do
                if objName:find(itemType) then
                    local found = false
                    for _, existingItem in pairs(foundItems) do
                        if existingItem == obj.Name then
                            found = true
                            break
                        end
                    end
                    if not found then
                        table.insert(foundItems, obj.Name)
                    end
                    break
                end
            end
        end
    end
    
    table.sort(foundItems)
    return foundItems
end

-- FIXED Enhanced tree scanning 
local function scanWorkspaceForSmallTrees()
    local foundTrees = {}
    
    for _, obj in pairs(workspace:GetDescendants()) do
        if obj:IsA("Model") or obj:IsA("Part") then
            local objName = obj.Name:lower()
            local objSize = nil
            
            if obj:IsA("Part") then
                objSize = obj.Size
            elseif obj:IsA("Model") and obj:FindFirstChildOfClass("BasePart") then
                objSize = obj:FindFirstChildOfClass("BasePart").Size
            end
            
            if (objName:find("tree") or objName:find("trunk")) and objSize then
                if objSize.Y < 20 and objSize.X < 15 and objSize.Z < 15 then
                    table.insert(foundTrees, obj)
                end
            end
        end
    end
    
    return foundTrees
end

-- Gem scanning function
local function scanWorkspaceForGems()
    local foundGems = {}
    
    for _, obj in pairs(workspace:GetDescendants()) do
        if obj:IsA("Part") or obj:IsA("Model") then
            local objName = obj.Name:lower()
            
            if objName:find("gem") or objName:find("crystal") or objName:find("diamond") then
                table.insert(foundGems, obj)
            end
        end
    end
    
    return foundGems
end

-- Advanced creature finding
local function findCreaturesInWorkspace(creatureName)
    local foundCreatures = {}
    local searchPatterns = {
        creatureName:lower(),
        creatureName:lower():gsub("the ", ""),
        creatureName:lower():gsub(" ", "")
    }
    
    for _, obj in pairs(workspace:GetDescendants()) do
        if obj:IsA("Model") and obj:FindFirstChildOfClass("Humanoid") then
            local objName = obj.Name:lower()
            
            for _, pattern in pairs(searchPatterns) do
                if objName:find(pattern) or objName == pattern then
                    table.insert(foundCreatures, obj)
                    break
                end
            end
        end
    end
    
    return foundCreatures
end

-- FIXED Enhanced invisible hitbox modification system
local function modifyCreatureHitbox(creatureName, newSize)
    local creatures = findCreaturesInWorkspace(creatureName)
    local modifiedCount = 0
    
    if #creatures > 0 then
        local creature = creatures[1]
        
        if creature and creature.Parent then
            if not originalHitboxSizes[creature] then
                originalHitboxSizes[creature] = {}
            end
            
            for _, part in pairs(creature:GetDescendants()) do
                if part:IsA("Part") and part.Name == "InvisibleHitbox" then
                    part:Destroy()
                end
            end
            
            local mainPart = creature:FindFirstChild("HumanoidRootPart") or 
                            creature:FindFirstChild("Torso") or
                            creature:FindFirstChildOfClass("BasePart")
            
            if mainPart then
                if not originalHitboxSizes[creature][mainPart] then
                    originalHitboxSizes[creature][mainPart] = mainPart.Size
                end
                
                local hitboxPart = Instance.new("Part")
                hitboxPart.Name = "InvisibleHitbox"
                hitboxPart.Size = Vector3.new(newSize, newSize, newSize)
                hitboxPart.CFrame = mainPart.CFrame
                hitboxPart.Anchored = false
                hitboxPart.CanCollide = true
                hitboxPart.Transparency = 1
                hitboxPart.Material = Enum.Material.ForceField
                hitboxPart.BrickColor = BrickColor.new("Bright red")
                hitboxPart.Parent = creature
                
                local weld = Instance.new("WeldConstraint")
                weld.Part0 = mainPart
                weld.Part1 = hitboxPart
                weld.Parent = hitboxPart
                
                modifiedCreatures[creature] = true
                modifiedCount = 1
            end
        end
    end
    
    return modifiedCount > 0
end

-- Reset all creature hitboxes
local function resetAllHitboxes()
    for creature, parts in pairs(originalHitboxSizes) do
        if creature and creature.Parent then
            for _, part in pairs(creature:GetDescendants()) do
                if part:IsA("Part") and part.Name == "InvisibleHitbox" then
                    part:Destroy()
                end
            end
        end
    end
    
    originalHitboxSizes = {}
    modifiedCreatures = {}
end

-- Enhanced hitbox visualization
local function createHitboxVisualization(creatureName, size)
    for _, visual in pairs(hitboxVisualization) do
        if visual and visual.Parent then
            visual:Destroy()
        end
    end
    hitboxVisualization = {}
    
    local creatures = findCreaturesInWorkspace(creatureName)
    if #creatures == 0 then return end
    
    for i, creature in pairs(creatures) do
        local rootPart = creature:FindFirstChild("HumanoidRootPart") or 
                        creature:FindFirstChild("Torso") or
                        creature:FindFirstChildOfClass("BasePart")
        
        if rootPart then
            local visualPart = Instance.new("Part")
            visualPart.Name = "HitboxVisualization_" .. i
            visualPart.Size = Vector3.new(size, size, size)
            visualPart.CFrame = rootPart.CFrame
            visualPart.Anchored = true
            visualPart.CanCollide = false
            visualPart.Transparency = 0.7
            visualPart.Material = Enum.Material.ForceField
            visualPart.BrickColor = BrickColor.new("Bright red")
            visualPart.Shape = Enum.PartType.Block
            visualPart.Parent = workspace
            
            local selectionBox = Instance.new("SelectionBox")
            selectionBox.Adornee = visualPart
            selectionBox.Color3 = Color3.fromRGB(255, 0, 0)
            selectionBox.LineThickness = 0.2
            selectionBox.Transparency = 0
            selectionBox.Parent = visualPart
            
            table.insert(hitboxVisualization, visualPart)
            
            local connection
            connection = RunService.Heartbeat:Connect(function()
                if creature and creature.Parent and rootPart and rootPart.Parent then
                    visualPart.CFrame = rootPart.CFrame
                else
                    connection:Disconnect()
                    if visualPart and visualPart.Parent then
                        visualPart:Destroy()
                    end
                    for j, vis in pairs(hitboxVisualization) do
                        if vis == visualPart then
                            table.remove(hitboxVisualization, j)
                            break
                        end
                    end
                end
            end)
        end
    end
end

-- ENHANCED ESP System for Creatures
local function createESPForCreature(creature)
    if not creature or not creature.Parent then return end
    
    local rootPart = creature:FindFirstChild("HumanoidRootPart") or 
                    creature:FindFirstChild("Torso") or
                    creature:FindFirstChildOfClass("BasePart")
    
    if not rootPart then return end
    
    for _, child in pairs(creature:GetChildren()) do
        if child.Name == "LostESP_99Nights" then
            child:Destroy()
        end
    end
    
    local espBox = Instance.new("BoxHandleAdornment")
    espBox.Name = "LostESP_99Nights"
    espBox.Adornee = rootPart
    espBox.Size = rootPart.Size + Vector3.new(2, 2, 2)
    espBox.Color3 = Color3.fromRGB(255, 0, 0)
    espBox.Transparency = 0.5
    espBox.AlwaysOnTop = true
    espBox.ZIndex = 10
    espBox.Parent = creature
    
    local attachment0 = Instance.new("Attachment")
    attachment0.Parent = rootPart
    
    local attachment1 = Instance.new("Attachment")
    if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
        attachment1.Parent = player.Character.HumanoidRootPart
        
        local beam = Instance.new("Beam")
        beam.Name = "LostESP_99Nights"
        beam.Attachment0 = attachment0
        beam.Attachment1 = attachment1
        beam.Color = ColorSequence.new(Color3.fromRGB(255, 255, 0))
        beam.Transparency = NumberSequence.new(0.5)
        beam.Width0 = 0.5
        beam.Width1 = 0.5
        beam.Parent = creature
    end
    
    local billboard = Instance.new("BillboardGui")
    billboard.Name = "LostESP_99Nights"
    billboard.Parent = rootPart
    billboard.Size = UDim2.new(0, 200, 0, 50)
    billboard.StudsOffset = Vector3.new(0, 3, 0)
    billboard.AlwaysOnTop = true
    
    local nameLabel = Instance.new("TextLabel")
    nameLabel.Parent = billboard
    nameLabel.Size = UDim2.new(1, 0, 0.5, 0)
    nameLabel.BackgroundTransparency = 1
    nameLabel.Text = creature.Name
    nameLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    nameLabel.TextStrokeTransparency = 0
    nameLabel.Font = Enum.Font.GothamBold
    nameLabel.TextSize = 14
    nameLabel.TextScaled = true
    
    local distanceLabel = Instance.new("TextLabel")
    distanceLabel.Parent = billboard
    distanceLabel.Size = UDim2.new(1, 0, 0.5, 0)
    distanceLabel.Position = UDim2.new(0, 0, 0.5, 0)
    distanceLabel.BackgroundTransparency = 1
    distanceLabel.TextColor3 = Color3.fromRGB(255, 255, 0)
    distanceLabel.TextStrokeTransparency = 0
    distanceLabel.Font = Enum.Font.Gotham
    distanceLabel.TextSize = 12
    distanceLabel.TextScaled = true
    
    local connection
    connection = RunService.Heartbeat:Connect(function()
        if creature and creature.Parent and rootPart and rootPart.Parent and 
           player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            local distance = (player.Character.HumanoidRootPart.Position - rootPart.Position).Magnitude
            distanceLabel.Text = math.floor(distance) .. " studs"
        else
            connection:Disconnect()
        end
    end)
    
    espData[creature] = {box = espBox, billboard = billboard, connection = connection}
end

-- ENHANCED ESP System for Players
local function createESPForPlayer(targetPlayer)
    if not targetPlayer or targetPlayer == player or not targetPlayer.Character then return end
    
    local rootPart = targetPlayer.Character:FindFirstChild("HumanoidRootPart")
    if not rootPart then return end
    
    for _, child in pairs(targetPlayer.Character:GetChildren()) do
        if child.Name == "LostPlayerESP_99Nights" then
            child:Destroy()
        end
    end
    
    local espBox = Instance.new("BoxHandleAdornment")
    espBox.Name = "LostPlayerESP_99Nights"
    espBox.Adornee = rootPart
    espBox.Size = rootPart.Size + Vector3.new(2, 2, 2)
    espBox.Color3 = Color3.fromRGB(0, 255, 0)
    espBox.Transparency = 0.5
    espBox.AlwaysOnTop = true
    espBox.ZIndex = 10
    espBox.Parent = targetPlayer.Character
    
    local attachment0 = Instance.new("Attachment")
    attachment0.Parent = rootPart
    
    local attachment1 = Instance.new("Attachment")
    if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
        attachment1.Parent = player.Character.HumanoidRootPart
        
        local beam = Instance.new("Beam")
        beam.Name = "LostPlayerESP_99Nights"
        beam.Attachment0 = attachment0
        beam.Attachment1 = attachment1
        beam.Color = ColorSequence.new(Color3.fromRGB(0, 255, 0))
        beam.Transparency = NumberSequence.new(0.5)
        beam.Width0 = 0.5
        beam.Width1 = 0.5
        beam.Parent = targetPlayer.Character
    end
    
    local billboard = Instance.new("BillboardGui")
    billboard.Name = "LostPlayerESP_99Nights"
    billboard.Parent = rootPart
    billboard.Size = UDim2.new(0, 200, 0, 50)
    billboard.StudsOffset = Vector3.new(0, 3, 0)
    billboard.AlwaysOnTop = true
    
    local nameLabel = Instance.new("TextLabel")
    nameLabel.Parent = billboard
    nameLabel.Size = UDim2.new(1, 0, 0.5, 0)
    nameLabel.BackgroundTransparency = 1
    nameLabel.Text = targetPlayer.Name
    nameLabel.TextColor3 = Color3.fromRGB(0, 255, 0)
    nameLabel.TextStrokeTransparency = 0
    nameLabel.Font = Enum.Font.GothamBold
    nameLabel.TextSize = 14
    nameLabel.TextScaled = true
    
    local distanceLabel = Instance.new("TextLabel")
    distanceLabel.Parent = billboard
    distanceLabel.Size = UDim2.new(1, 0, 0.5, 0)
    distanceLabel.Position = UDim2.new(0, 0, 0.5, 0)
    distanceLabel.BackgroundTransparency = 1
    distanceLabel.TextColor3 = Color3.fromRGB(0, 255, 255)
    distanceLabel.TextStrokeTransparency = 0
    distanceLabel.Font = Enum.Font.Gotham
    distanceLabel.TextSize = 12
    distanceLabel.TextScaled = true
    
    local connection
    connection = RunService.Heartbeat:Connect(function()
        if targetPlayer and targetPlayer.Character and rootPart and rootPart.Parent and 
           player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            local distance = (player.Character.HumanoidRootPart.Position - rootPart.Position).Magnitude
            distanceLabel.Text = math.floor(distance) .. " studs"
        else
            connection:Disconnect()
        end
    end)
    
    playerESPData[targetPlayer] = {box = espBox, billboard = billboard, connection = connection}
end

-- ESP Auto-refresh system
local function startESPAutoRefresh()
    if espRefreshConnection then return end
    
    espRefreshConnection = RunService.Heartbeat:Connect(function()
        task.wait(5)
        
        if allESPEnabled then
            local allCreatures = scanWorkspaceForCreatures()
            for _, creatureName in pairs(allCreatures) do
                local creatures = findCreaturesInWorkspace(creatureName)
                for _, creature in pairs(creatures) do
                    if not espData[creature] then
                        createESPForCreature(creature)
                    end
                end
            end
        elseif espEnabled and selectedESPCreature ~= "" then
            local creatures = findCreaturesInWorkspace(selectedESPCreature)
            for _, creature in pairs(creatures) do
                if not espData[creature] then
                    createESPForCreature(creature)
                end
            end
        end
        
        if playerESPEnabled then
            for _, targetPlayer in pairs(Players:GetPlayers()) do
                if targetPlayer ~= player and targetPlayer.Character and not playerESPData[targetPlayer] then
                    createESPForPlayer(targetPlayer)
                end
            end
        end
    end)
end

local function stopESPAutoRefresh()
    if espRefreshConnection then
        espRefreshConnection:Disconnect()
        espRefreshConnection = nil
    end
end

-- Remove ESP functions
local function removeESPFromCreature(creature)
    if espData[creature] then
        if espData[creature].connection then
            espData[creature].connection:Disconnect()
        end
        espData[creature] = nil
    end
    
    for _, child in pairs(creature:GetChildren()) do
        if child.Name == "LostESP_99Nights" then
            child:Destroy()
        end
    end
    
    if creature:FindFirstChild("HumanoidRootPart") then
        for _, child in pairs(creature.HumanoidRootPart:GetChildren()) do
            if child.Name == "LostESP_99Nights" then
                child:Destroy()
            end
        end
    end
end

local function removeESPFromPlayer(targetPlayer)
    if playerESPData[targetPlayer] then
        if playerESPData[targetPlayer].connection then
            playerESPData[targetPlayer].connection:Disconnect()
        end
        playerESPData[targetPlayer] = nil
    end
    
    if targetPlayer.Character then
        for _, child in pairs(targetPlayer.Character:GetChildren()) do
            if child.Name == "LostPlayerESP_99Nights" then
                child:Destroy()
            end
        end
        
        if targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
            for _, child in pairs(targetPlayer.Character.HumanoidRootPart:GetChildren()) do
                if child.Name == "LostPlayerESP_99Nights" then
                    child:Destroy()
                end
            end
        end
    end
end

-- Enable ESP functions
local function enableCreatureESP(creatureName)
    local creatures = findCreaturesInWorkspace(creatureName)
    for _, creature in pairs(creatures) do
        createESPForCreature(creature)
    end
    espEnabled = true
    startESPAutoRefresh()
end

local function enableAllCreatureESP()
    local allCreatures = scanWorkspaceForCreatures()
    for _, creatureName in pairs(allCreatures) do
        local creatures = findCreaturesInWorkspace(creatureName)
        for _, creature in pairs(creatures) do
            createESPForCreature(creature)
        end
    end
    allESPEnabled = true
    startESPAutoRefresh()
end

local function enableAllPlayerESP()
    for _, targetPlayer in pairs(Players:GetPlayers()) do
        if targetPlayer ~= player then
            createESPForPlayer(targetPlayer)
        end
    end
    playerESPEnabled = true
    startESPAutoRefresh()
end

local function disableAllESP()
    espEnabled = false
    allESPEnabled = false
    playerESPEnabled = false
    stopESPAutoRefresh()
    
    for creature, _ in pairs(espData) do
        removeESPFromCreature(creature)
    end
    espData = {}
    
    for targetPlayer, _ in pairs(playerESPData) do
        removeESPFromPlayer(targetPlayer)
    end
    playerESPData = {}
    
    for _, obj in pairs(workspace:GetDescendants()) do
        if obj.Name == "LostESP_99Nights" or obj.Name == "LostPlayerESP_99Nights" then
            obj:Destroy()
        end
    end
end

-- Map Highlight Toggle
local function toggleMapHighlight()
    if mapHighlightEnabled then
        if mapHighlight then
            mapHighlight:Destroy()
            mapHighlight = nil
        end
        mapHighlightEnabled = false
    else
        mapHighlight = Instance.new("ColorCorrectionEffect")
        mapHighlight.Name = "LostHubMapHighlight"
        mapHighlight.Brightness = 0.5
        mapHighlight.Contrast = 0.3
        mapHighlight.Saturation = 0.2
        mapHighlight.Parent = Lighting
        mapHighlightEnabled = true
    end
end

-- FIXED Enhanced item spawning - logs teleport to player properly
local function spawnSelectedItem(itemName)
    if not player.Character or not player.Character:FindFirstChild("HumanoidRootPart") then
        return
    end
    
    local referenceItem = nil
    
    if itemName:lower():find("log") then
        local searchNames = {"Log", "Logs", "log", "logs"}
        
        for _, searchName in pairs(searchNames) do
            for _, obj in pairs(workspace:GetDescendants()) do
                if obj.Name == searchName and (obj:IsA("Part") or obj:IsA("Model")) then
                    referenceItem = obj
                    break
                end
            end
            if referenceItem then break end
        end
    else
        for _, obj in pairs(workspace:GetDescendants()) do
            if obj.Name == itemName and (obj:IsA("Part") or obj:IsA("Model")) then
                referenceItem = obj
                break
            end
        end
    end
    
    if not referenceItem then
        return
    end
    
    local playerPos = player.Character.HumanoidRootPart.Position
    local spawnCount = math.random(8, 15)
    
    for i = 1, spawnCount do
        local angle = (i / spawnCount) * math.pi * 2
        local distance = math.random(10, 30)
        local spawnPos = playerPos + Vector3.new(
            math.cos(angle) * distance,
            math.random(2, 8),
            math.sin(angle) * distance
        )
        
        local newItem
        if referenceItem:IsA("Part") then
            newItem = referenceItem:Clone()
            newItem.Position = spawnPos
            newItem.Anchored = false
            newItem.CanCollide = true
            newItem.Parent = workspace
        elseif referenceItem:IsA("Model") then
            newItem = referenceItem:Clone()
            if newItem:FindFirstChild("HumanoidRootPart") then
                newItem.HumanoidRootPart.Position = spawnPos
                newItem.HumanoidRootPart.Anchored = false
            elseif newItem:FindFirstChildOfClass("BasePart") then
                local mainPart = newItem:FindFirstChildOfClass("BasePart")
                mainPart.Position = spawnPos
                mainPart.Anchored = false
            end
            newItem.Parent = workspace
        end
        
        task.wait(0.1)
    end
    
    task.wait(2)
    
    -- FIXED: Collect all spawned items by teleporting them to player
    for _, obj in pairs(workspace:GetChildren()) do
        if obj.Name == itemName or obj.Name == "Log" or obj.Name == "Logs" then
            if obj:IsA("Part") then
                local collectTween = TweenService:Create(
                    obj,
                    TweenInfo.new(0.8, Enum.EasingStyle.Quad),
                    {Position = playerPos + Vector3.new(math.random(-3, 3), math.random(1, 5), math.random(-3, 3))}
                )
                collectTween:Play()
            elseif obj:IsA("Model") and obj:FindFirstChildOfClass("BasePart") then
                local mainPart = obj:FindFirstChildOfClass("BasePart")
                local collectTween = TweenService:Create(
                    mainPart,
                    TweenInfo.new(0.8, Enum.EasingStyle.Quad),
                    {Position = playerPos + Vector3.new(math.random(-3, 3), math.random(1, 5), math.random(-3, 3))}
                )
                collectTween:Play()
            end
            
            task.spawn(function()
                task.wait(2)
                if obj and obj.Parent then
                    obj:Destroy()
                end
            end)
        end
    end
end

-- COMPLETELY REWRITTEN tree cutting with perfect positioning
local function startAutoCutTrees()
    if autoCuttingTrees then return end
    
    autoCuttingTrees = true
    
    task.spawn(function()
        while autoCuttingTrees do
            if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
                local tempNoclipConnection = RunService.Stepped:Connect(function()
                    if player.Character and autoCuttingTrees then
                        for _, part in pairs(player.Character:GetDescendants()) do
                            if part:IsA("BasePart") and part.CanCollide then
                                part.CanCollide = false
                            end
                        end
                    end
                end)
                
                local trees = scanWorkspaceForSmallTrees()
                
                for _, tree in pairs(trees) do
                    if not autoCuttingTrees then break end
                    if not tree or not tree.Parent then continue end
                    
                    local treePos = nil
                    local treePart = nil
                    
                    if tree:IsA("Part") then
                        treePos = tree.Position
                        treePart = tree
                    elseif tree:IsA("Model") and tree:FindFirstChildOfClass("BasePart") then
                        treePart = tree:FindFirstChildOfClass("BasePart")
                        treePos = treePart.Position
                    end
                    
                    if treePos and treePart then
                        -- FIXED: Position player DIRECTLY in front of the tree and floating
                        local frontPos = treePos + Vector3.new(0, 5, 8) -- In front and floating
                        local lookDirection = (treePos - frontPos).Unit
                        local targetCFrame = CFrame.lookAt(frontPos, treePos)
                        
                        if currentTweenToTree then
                            currentTweenToTree:Cancel()
                        end
                        
                        currentTweenToTree = TweenService:Create(
                            player.Character.HumanoidRootPart,
                            TweenInfo.new(2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                            {CFrame = targetCFrame}
                        )
                        
                        currentTweenToTree:Play()
                        currentTweenToTree.Completed:Wait()
                        
                        if tree and tree.Parent and autoCuttingTrees then
                            if tree:IsA("Model") then
                                for _, part in pairs(tree:GetDescendants()) do
                                    if part:IsA("ClickDetector") then
                                        fireclickdetector(part)
                                        break
                                    end
                                end
                            elseif tree:IsA("Part") and tree:FindFirstChildOfClass("ClickDetector") then
                                fireclickdetector(tree:FindFirstChildOfClass("ClickDetector"))
                            end
                            
                            -- FIXED: Wait until tree is completely gone
                            local startTime = tick()
                            while tree and tree.Parent and (tick() - startTime) < 10 and autoCuttingTrees do
                                task.wait(0.3)
                            end
                            
                            -- Move instantly to next tree once this one is gone
                            if not tree or not tree.Parent then
                                task.wait(0.2) -- Brief pause before next tree
                            end
                        end
                    end
                end
                
                if tempNoclipConnection then
                    tempNoclipConnection:Disconnect()
                end
                
                if player.Character then
                    for _, part in pairs(player.Character:GetDescendants()) do
                        if part:IsA("BasePart") then
                            part.CanCollide = true
                        end
                    end
                end
            end
            
            task.wait(5)
        end
    end)
end

local function stopAutoCutTrees()
    autoCuttingTrees = false
    if currentTweenToTree then
        currentTweenToTree:Cancel()
        currentTweenToTree = nil
    end
end

-- FIXED Enhanced fly system
local function startFly()
    if isFlying then return end
    
    isFlying = true
    
    if not player.Character or not player.Character:FindFirstChild("HumanoidRootPart") then
        return
    end
    
    local hrp = player.Character.HumanoidRootPart
    local humanoid = player.Character:FindFirstChild("Humanoid")
    
    flyBodyVelocity = Instance.new("BodyVelocity")
    flyBodyVelocity.MaxForce = Vector3.new(4000, 4000, 4000)
    flyBodyVelocity.Velocity = Vector3.new(0, 0, 0)
    flyBodyVelocity.Parent = hrp
    
    flyBodyPosition = Instance.new("BodyPosition")
    flyBodyPosition.MaxForce = Vector3.new(4000, 4000, 4000)
    flyBodyPosition.Position = hrp.Position
    flyBodyPosition.Parent = hrp
    
    flyConnection = RunService.Heartbeat:Connect(function()
        if not isFlying or not player.Character or not hrp or not hrp.Parent then
            if flyBodyVelocity then flyBodyVelocity:Destroy() end
            if flyBodyPosition then flyBodyPosition:Destroy() end
            return
        end
        
        local camera = workspace.CurrentCamera
        local moveVector = Vector3.new(0, 0, 0)
        
        if UserInputService:IsKeyDown(Enum.KeyCode.W) then
            moveVector = moveVector + camera.CFrame.LookVector
        end
        if UserInputService:IsKeyDown(Enum.KeyCode.S) then
            moveVector = moveVector - camera.CFrame.LookVector
        end
        if UserInputService:IsKeyDown(Enum.KeyCode.A) then
            moveVector = moveVector - camera.CFrame.RightVector
        end
        if UserInputService:IsKeyDown(Enum.KeyCode.D) then
            moveVector = moveVector + camera.CFrame.RightVector
        end
        if UserInputService:IsKeyDown(Enum.KeyCode.Space) then
            moveVector = moveVector + Vector3.new(0, 1, 0)
        end
        if UserInputService:IsKeyDown(Enum.KeyCode.LeftShift) then
            moveVector = moveVector - Vector3.new(0, 1, 0)
        end
        
        if moveVector.Magnitude > 0 then
            local newPos = hrp.Position + (moveVector.Unit * flySpeed * 0.1)
            flyBodyPosition.Position = newPos
        else
            flyBodyPosition.Position = hrp.Position
        end
        
        flyBodyVelocity.Velocity = Vector3.new(0, 0, 0)
        
        if humanoid then
            humanoid.PlatformStand = true
        end
    end)
end

local function stopFly()
    isFlying = false
    
    if flyConnection then
        flyConnection:Disconnect()
        flyConnection = nil
    end
    
    if flyBodyVelocity then
        flyBodyVelocity:Destroy()
        flyBodyVelocity = nil
    end
    
    if flyBodyPosition then
        flyBodyPosition:Destroy()
        flyBodyPosition = nil
    end
    
    if player.Character and player.Character:FindFirstChild("Humanoid") then
        player.Character.Humanoid.PlatformStand = false
    end
end

-- Enhanced noclip
local function enableNoclip99()
    if noclipEnabled then return end
    
    noclipEnabled = true
    
    noclipConnection99 = RunService.Stepped:Connect(function()
        if player.Character and noclipEnabled then
            for _, part in pairs(player.Character:GetDescendants()) do
                if part:IsA("BasePart") and part.CanCollide then
                    part.CanCollide = false
                    
                    if part == player.Character:FindFirstChild("HumanoidRootPart") then
                        local vel = part.AssemblyLinearVelocity
                        if vel.Magnitude > 50 then
                            part.AssemblyLinearVelocity = Vector3.new(0, 0, 0)
                            part.AssemblyAngularVelocity = Vector3.new(0, 0, 0)
                        end
                    end
                end
            end
        end
    end)
end

local function disableNoclip99()
    noclipEnabled = false
    
    if noclipConnection99 then
        noclipConnection99:Disconnect()
        noclipConnection99 = nil
    end
    
    if player.Character then
        for _, part in pairs(player.Character:GetDescendants()) do
            if part:IsA("BasePart") then
                part.CanCollide = true
            end
        end
    end
end

-- FIXED Update player speed and jump power
local function updatePlayerSpeed(speed)
    playerSpeed = speed
    if player.Character and player.Character:FindFirstChild("Humanoid") then
        player.Character.Humanoid.WalkSpeed = speed
    end
end

local function updatePlayerJumpPower(power)
    playerJumpPower = power
    if player.Character and player.Character:FindFirstChild("Humanoid") then
        player.Character.Humanoid.JumpPower = power
        player.Character.Humanoid.JumpHeight = power
    end
end

-- Player teleportation function
local function teleportToPlayer(targetPlayerName)
    local targetPlayer = Players:FindFirstChild(targetPlayerName)
    if not targetPlayer then
        return
    end
    
    if not targetPlayer.Character or not targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
        return
    end
    
    if not player.Character or not player.Character:FindFirstChild("HumanoidRootPart") then
        return
    end
    
    player.Character.HumanoidRootPart.CFrame = targetPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0, 0, -5)
end

-- Tween to player function
local function tweenToPlayer(targetPlayerName)
    local targetPlayer = Players:FindFirstChild(targetPlayerName)
    if not targetPlayer then
        return
    end
    
    if not targetPlayer.Character or not targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
        return
    end
    
    if not player.Character or not player.Character:FindFirstChild("HumanoidRootPart") then
        return
    end
    
    local targetPos = targetPlayer.Character.HumanoidRootPart.Position
    local tweenInfo = TweenInfo.new(3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
    local tween = TweenService:Create(
        player.Character.HumanoidRootPart,
        tweenInfo,
        {CFrame = CFrame.new(targetPos + Vector3.new(0, 0, -5))}
    )
    
    tween:Play()
end

-- NEW Auto Gem Grinder with server hopping
local function startAutoGemGrinder()
    if isAutoGrindingGems then return end
    
    isAutoGrindingGems = true
    
    autoGemConnection = task.spawn(function()
        while isAutoGrindingGems do
            local gems = scanWorkspaceForGems()
            
            if #gems == 0 then
                -- No gems found, hop servers
                TeleportService:Teleport(NIGHTS_99_GAME_ID, player)
                break
            end
            
            -- Collect all gems
            if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
                local playerPos = player.Character.HumanoidRootPart.Position
                
                for _, gem in pairs(gems) do
                    if not isAutoGrindingGems then break end
                    if not gem or not gem.Parent then continue end
                    
                    local gemPos = nil
                    if gem:IsA("Part") then
                        gemPos = gem.Position
                    elseif gem:IsA("Model") and gem:FindFirstChildOfClass("BasePart") then
                        gemPos = gem:FindFirstChildOfClass("BasePart").Position
                    end
                    
                    if gemPos then
                        -- Tween to gem
                        local tween = TweenService:Create(
                            player.Character.HumanoidRootPart,
                            TweenInfo.new(1.5, Enum.EasingStyle.Quad),
                            {CFrame = CFrame.new(gemPos + Vector3.new(0, 5, 0))}
                        )
                        tween:Play()
                        tween.Completed:Wait()
                        
                        -- Auto-click gem
                        if gem and gem.Parent then
                            if gem:IsA("Part") and gem:FindFirstChildOfClass("ClickDetector") then
                                fireclickdetector(gem:FindFirstChildOfClass("ClickDetector"))
                            elseif gem:IsA("Model") then
                                for _, part in pairs(gem:GetDescendants()) do
                                    if part:IsA("ClickDetector") then
                                        fireclickdetector(part)
                                        break
                                    end
                                end
                            end
                        end
                        
                        task.wait(0.5)
                    end
                end
            end
            
            task.wait(10) -- Wait before scanning again
        end
    end)
end

local function stopAutoGemGrinder()
    isAutoGrindingGems = false
    if autoGemConnection then
        task.cancel(autoGemConnection)
        autoGemConnection = nil
    end
end

-- Hub Creation Function
local function createHub()
    if hubLoaded then return end
    hubLoaded = true
    
    local success, WindUI = pcall(function()
        return loadstring(game:HttpGet("https://github.com/Footagesus/WindUI/releases/latest/download/main.lua"))()
    end)
    
    if not success then
        return
    end

    local windowTitle = currentGame == "MM2" and "Lost Hub - MM2" or "Lost Hub - 99 Nights"
    local windowAuthor = currentGame == "MM2" and "MM2 Exclusive Edition" or "99 Nights Edition"

    Window = WindUI:CreateWindow({
        Title = windowTitle,
        Icon = "rbxassetid://122913243559549",
        Author = windowAuthor,
        Folder = "LostHub",
        Size = isMobile and UDim2.fromOffset(500, 400) or UDim2.fromOffset(580, 325),
        Transparent = true,
        Theme = "Dark",
        Resizable = true,
        SideBarWidth = isMobile and 150 or 200,
    })

    local tabs = {}
    
    if currentGame == "MM2" then
        -- ALL MM2 TABS PRESERVED (UNCHANGED - DO NOT MODIFY)
        tabs.CreditsTab = Window:Tab({Title = "Credits", Icon = "info"})
        tabs.EspTab = Window:Tab({Title = "ESP", Icon = "eye"})
        tabs.MurderTab = Window:Tab({Title = "Murder", Icon = "zap"})
        tabs.SheriffTab = Window:Tab({Title = "Sheriff", Icon = "shield"})
        tabs.InnocentTab = Window:Tab({Title = "Innocent", Icon = "user"})
        tabs.RandomTab = Window:Tab({Title = "Random", Icon = "settings"})
        tabs.AutoGrindTab = Window:Tab({Title = "Auto Grind", Icon = "circle-play"})
        
        -- Credits Tab - Enhanced with detailed descriptions
        tabs.CreditsTab:Section({Title = "Team Credits"})
        tabs.CreditsTab:Paragraph({
            Title = "Script Developers",
            Desc = "• 生まれ変わった"
        })
        tabs.CreditsTab:Paragraph({
            Title = "Script Contributors",
            Desc = "• None"
        })
        tabs.CreditsTab:Paragraph({
            Title = "Testers",
            Desc = "• None"
        })
        
        tabs.CreditsTab:Section({Title = "More Details"})
        tabs.CreditsTab:Paragraph({
            Title = "Script Developers",
            Desc = "Responsible for creating and maintaining the entire script codebase, implementing new features, and ensuring compatibility across different games."
        })
        tabs.CreditsTab:Paragraph({
            Title = "Script Contributors",
            Desc = "Community members who contribute code improvements, bug fixes, and feature suggestions to enhance the script's functionality."
        })
        tabs.CreditsTab:Paragraph({
            Title = "Testers",
            Desc = "Dedicated individuals who test new features, report bugs, and provide feedback to ensure the script works reliably across different scenarios."
        })

        -- ESP Tab (UNCHANGED - DO NOT MODIFY)
        tabs.EspTab:Section({Title = "Enhanced ESP System"})
        
        tabs.EspTab:Button({
            Title = "Player ESP",
            Desc = "Shows roles with colors",
            Callback = function()
                local function createESP(targetPlayer)
                    if targetPlayer == player then return end
                    
                    local function addESP(char)
                        if not char then return end
                        local hrp = char:WaitForChild("HumanoidRootPart", 5)
                        if not hrp then return end
                        
                        for _, v in pairs(char:GetChildren()) do
                            if v.Name == "LostESP" then v:Destroy() end
                        end
                        
                        local billboard = Instance.new("BillboardGui")
                        billboard.Name = "LostESP"
                        billboard.Parent = hrp
                        billboard.Size = UDim2.new(0, 200, 0, 100)
                        billboard.StudsOffset = Vector3.new(0, 3, 0)
                        billboard.AlwaysOnTop = true
                        
                        local nameLabel = Instance.new("TextLabel")
                        nameLabel.Parent = billboard
                        nameLabel.Size = UDim2.new(1, 0, 0.5, 0)
                        nameLabel.BackgroundTransparency = 1
                        nameLabel.Text = targetPlayer.Name
                        nameLabel.TextColor3 = Color3.new(1, 1, 1)
                        nameLabel.TextStrokeTransparency = 0
                        nameLabel.Font = Enum.Font.GothamBold
                        nameLabel.TextSize = 16
                        nameLabel.TextScaled = true
                        
                        local roleLabel = Instance.new("TextLabel")
                        roleLabel.Parent = billboard
                        roleLabel.Size = UDim2.new(1, 0, 0.5, 0)
                        roleLabel.Position = UDim2.new(0, 0, 0.5, 0)
                        roleLabel.BackgroundTransparency = 1
                        roleLabel.TextStrokeTransparency = 0
                        roleLabel.Font = Enum.Font.Gotham
                        roleLabel.TextSize = 14
                        roleLabel.TextScaled = true
                        
                        local highlight = Instance.new("Highlight")
                        highlight.Name = "LostESP"
                        highlight.Parent = char
                        highlight.FillTransparency = 0.7
                        highlight.OutlineTransparency = 0
                        
                        local function updateESP()
                            local role = getPlayerRole(targetPlayer)
                            local colors = {
                                Sheriff = Color3.fromRGB(0, 100, 255),
                                Murderer = Color3.fromRGB(255, 0, 0),
                                Innocent = Color3.fromRGB(0, 255, 0),
                                Dead = Color3.fromRGB(128, 128, 128)
                            }
                            
                            local color = colors[role] or Color3.new(1, 1, 1)
                            roleLabel.Text = role
                            roleLabel.TextColor3 = color
                            highlight.FillColor = color
                        end
                        
                        updateESP()
                        RunService.Heartbeat:Connect(updateESP)
                    end
                    
                    if targetPlayer.Character then addESP(targetPlayer.Character) end
                    targetPlayer.CharacterAdded:Connect(addESP)
                end
                
                for _, plr in pairs(Players:GetPlayers()) do
                    createESP(plr)
                end
                Players.PlayerAdded:Connect(createESP)
            end
        })
        
        tabs.EspTab:Button({
            Title = "Gun ESP",
            Desc = "Shows dropped guns",
            Callback = function()
                _G.GunESP = true
                
                local function createGunESP()
                    for _, obj in pairs(workspace:GetDescendants()) do
                        if obj.Name == "LostGunESP" then
                            obj:Destroy()
                        end
                    end
                    
                    local guns = findDroppedGuns()
                    
                    for _, gunData in pairs(guns) do
                        local billboard = Instance.new("BillboardGui")
                        billboard.Name = "LostGunESP"
                        billboard.Parent = gunData.handle
                        billboard.Size = UDim2.new(0, 100, 0, 50)
                        billboard.StudsOffset = Vector3.new(0, 3, 0)
                        billboard.AlwaysOnTop = true
                        
                        local label = Instance.new("TextLabel")
                        label.Parent = billboard
                        label.Size = UDim2.new(1, 0, 1, 0)
                        label.BackgroundTransparency = 1
                        label.Text = "GUN"
                        label.TextColor3 = Color3.fromRGB(255, 215, 0)
                        label.TextStrokeTransparency = 0
                        label.Font = Enum.Font.GothamBold
                        label.TextSize = 18
                        label.TextScaled = true
                        
                        local highlight = Instance.new("Highlight")
                        highlight.Name = "LostGunESP"
                        highlight.Parent = gunData.tool
                        highlight.FillColor = Color3.fromRGB(255, 215, 0)
                        highlight.FillTransparency = 0.5
                        highlight.OutlineTransparency = 0
                    end
                end
                
                createGunESP()
                
                task.spawn(function()
                    while _G.GunESP do
                        task.wait(1.5)
                        if _G.GunESP then
                            createGunESP()
                        end
                    end
                end)
            end
        })
        
        -- Murder Tab (UNCHANGED - DO NOT MODIFY)
        tabs.MurderTab:Section({Title = "Murderer Features"})
        
        tabs.MurderTab:Toggle({
            Title = "Auto Kill",
            Desc = "Automatically kill players",
            Default = false,
            Callback = function(state)
                _G.AutoKill = state
                if state then
                    task.spawn(function()
                        while _G.AutoKill do
                            if player.Character and getPlayerRole(player) == "Murderer" then
                                local knife = player.Character:FindFirstChild("Knife") or 
                                            player.Backpack:FindFirstChild("Knife")
                                
                                if knife and knife.Parent == player.Backpack then
                                    player.Character.Humanoid:EquipTool(knife)
                                    task.wait(0.1)
                                end
                                
                                for _, target in pairs(Players:GetPlayers()) do
                                    if target ~= player then
                                        local targetRole = getPlayerRole(target)
                                        
                                        if targetRole ~= "Dead" and target.Character and 
                                           target.Character:FindFirstChild("HumanoidRootPart") and
                                           target.Character.Humanoid.Health > 0 then
                                            
                                            player.Character.HumanoidRootPart.CFrame = 
                                                target.Character.HumanoidRootPart.CFrame * CFrame.new(0, 0, -2)
                                            
                                            if player.Character:FindFirstChild("Knife") then
                                                player.Character.Knife:Activate()
                                            end
                                            
                                            task.wait(MM2_CONFIG.DELAY)
                                        end
                                    end
                                end
                            end
                            task.wait(0.3)
                        end
                    end)
                else
                    -- Stop auto kill
                end
            end
        })
        
        tabs.MurderTab:Button({
            Title = "Kill All",
            Desc = "Kill all players instantly",
            Callback = function()
                if player.Character and getPlayerRole(player) == "Murderer" then
                    local knife = player.Character:FindFirstChild("Knife") or 
                                player.Backpack:FindFirstChild("Knife")
                    
                    if knife and knife.Parent == player.Backpack then
                        player.Character.Humanoid:EquipTool(knife)
                        task.wait(0.1)
                    end
                    
                    for _, target in pairs(Players:GetPlayers()) do
                        if target ~= player and target.Character and target.Character:FindFirstChild("HumanoidRootPart") then
                            player.Character.HumanoidRootPart.CFrame = 
                                target.Character.HumanoidRootPart.CFrame * CFrame.new(0, 0, -2)
                            
                            if player.Character:FindFirstChild("Knife") then
                                player.Character.Knife:Activate()
                            end
                            
                            task.wait(0.1)
                        end
                    end
                else
                    -- Not murderer message
                end
            end
        })

        -- Sheriff Tab (UNCHANGED - DO NOT MODIFY)
        tabs.SheriffTab:Section({Title = "Sheriff Features"})
        
        tabs.SheriffTab:Toggle({
            Title = "Aimbot",
            Desc = "Auto aim at murderer",
            Default = false,
            Callback = function(state)
                if state then
                    startAimbot()
                else
                    stopAimbot()
                end
            end
        })
        
        tabs.SheriffTab:Button({
            Title = "Auto Shoot Murderer",
            Desc = "Instantly shoot the murderer",
            Callback = function()
                local murderer = findMurderer()
                if murderer and murderer.Character then
                    local gun = player.Character:FindFirstChild("Gun") or 
                              (player.Backpack and player.Backpack:FindFirstChild("Gun"))
                    
                    if gun and gun.Parent == player.Backpack then
                        player.Character.Humanoid:EquipTool(gun)
                        task.wait(0.1)
                    end
                    
                    gun = player.Character:FindFirstChild("Gun")
                    if gun then
                        player.Character.HumanoidRootPart.CFrame = 
                            murderer.Character.HumanoidRootPart.CFrame * CFrame.new(0, 0, -10)
                        gun:Activate()
                    end
                end
            end
        })

        -- Innocent Tab (UNCHANGED - DO NOT MODIFY)
        tabs.InnocentTab:Section({Title = "Innocent Features"})
        
        tabs.InnocentTab:Button({
            Title = "Teleport to Gun",
            Desc = "Teleport to dropped gun",
            Callback = function()
                if not player.Character or not player.Character:FindFirstChild("HumanoidRootPart") then
                    return
                end
                
                local guns = findDroppedGuns()
                
                if #guns > 0 then
                    local playerPos = player.Character.HumanoidRootPart.Position
                    local closestGun = nil
                    local shortestDistance = math.huge
                    
                    for _, gunData in pairs(guns) do
                        local distance = (playerPos - gunData.position).Magnitude
                        if distance < shortestDistance then
                            shortestDistance = distance
                            closestGun = gunData
                        end
                    end
                    
                    if closestGun then
                        player.Character.HumanoidRootPart.CFrame = CFrame.new(closestGun.position + Vector3.new(0, 5, 0))
                    end
                end
            end
        })
        
        tabs.InnocentTab:Section({Title = "Player Teleportation"})
        
        local function getOnlinePlayers()
            local playerList = {}
            for _, plr in pairs(Players:GetPlayers()) do
                if plr ~= player and plr.Character and plr.Character:FindFirstChild("HumanoidRootPart") then
                    table.insert(playerList, plr.Name)
                end
            end
            return playerList
        end
        
        local selectedPlayer = ""
        
        local playerDropdown = tabs.InnocentTab:Dropdown({
            Title = "Select Player",
            Values = getOnlinePlayers(),
            Multi = false,
            Default = 1,
            Callback = function(value)
                selectedPlayer = value or ""
            end
        })
        
        tabs.InnocentTab:Button({
            Title = "Teleport to Player",
            Desc = "Teleport to selected player",
            Callback = function()
                if selectedPlayer ~= "" then
                    local targetPlayer = Players:FindFirstChild(selectedPlayer)
                    if targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
                        player.Character.HumanoidRootPart.CFrame = 
                            targetPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0, 0, -5)
                    end
                end
            end
        })
        
        task.spawn(function()
            while task.wait(3) do
                if playerDropdown then
                    local newList = getOnlinePlayers()
                    playerDropdown:SetValues(newList)
                    
                    if selectedPlayer ~= "" then
                        local found = false
                        for _, name in pairs(newList) do
                            if name == selectedPlayer then
                                found = true
                                break
                            end
                        end
                        if not found then
                            selectedPlayer = ""
                        end
                    end
                end
            end
        end)

        -- Random Tab (UNCHANGED - DO NOT MODIFY)
        tabs.RandomTab:Section({Title = "Movement Features"})
        
        tabs.RandomTab:Toggle({
            Title = "Speed Boost",
            Desc = "Increase walking speed",
            Default = false,
            Callback = function(state)
                if player.Character and player.Character:FindFirstChild("Humanoid") then
                    player.Character.Humanoid.WalkSpeed = state and 50 or 16
                end
            end
        })
        
        tabs.RandomTab:Toggle({
            Title = "Jump Boost",
            Desc = "Increase jump power",
            Default = false,
            Callback = function(state)
                if player.Character and player.Character:FindFirstChild("Humanoid") then
                    player.Character.Humanoid.JumpPower = state and 120 or 50
                end
            end
        })
        
        tabs.RandomTab:Toggle({
            Title = "Noclip",
            Desc = "Walk through walls",
            Default = false,
            Callback = function(state)
                if state then
                    enableNoclip()
                else
                    disableNoclip()
                end
            end
        })

        tabs.RandomTab:Toggle({
            Title = "Infinite Jump",
            Desc = "Enable infinite jumping",
            Default = false,
            Callback = function(state)
                _G.InfiniteJump = state
                
                if _G.InfiniteJump then
                    _G.InfiniteJumpConnection = UserInputService.JumpRequest:Connect(function()
                        if player.Character and player.Character:FindFirstChild("Humanoid") then
                            player.Character.Humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
                        end
                    end)
                else
                    if _G.InfiniteJumpConnection then
                        _G.InfiniteJumpConnection:Disconnect()
                        _G.InfiniteJumpConnection = nil
                    end
                end
            end
        })

        tabs.RandomTab:Button({
            Title = "Toggle Anti Void",
            Desc = "Creates/removes baseplate to prevent falling",
            Callback = function()
                if _G.AntiVoidPlatform then
                    _G.AntiVoidPlatform:Destroy()
                    _G.AntiVoidPlatform = nil
                else
                    local platform = Instance.new("Part")
                    platform.Name = "AntiVoidPlatform"
                    platform.Size = Vector3.new(2048, 16, 2048)
                    platform.Position = Vector3.new(0, -500, 0)
                    platform.Anchored = true
                    platform.CanCollide = true
                    platform.Material = Enum.Material.Plastic
                    platform.BrickColor = BrickColor.new("Bright green")
                    platform.TopSurface = Enum.SurfaceType.Smooth
                    platform.BottomSurface = Enum.SurfaceType.Smooth
                    platform.Parent = workspace
                    
                    _G.AntiVoidPlatform = platform
                end
            end
        })

        -- Auto Grind Tab (UNCHANGED - DO NOT MODIFY)
        tabs.AutoGrindTab:Section({Title = "Collection System"})
        
        tabs.AutoGrindTab:Toggle({
            Title = "Auto Collect Coins",
            Desc = "Automatically collect coins and beach balls",
            Default = false,
            Callback = function(state)
                if state then
                    startOptimizedCollection()
                else
                    stopCollection()
                end
            end
        })
        
        tabs.AutoGrindTab:Slider({
            Title = "Collection Speed",
            Step = 0.1,
            Value = {
                Min = 0.1,
                Max = 5,
                Default = 1,
            },
            Callback = function(value)
                MM2_CONFIG.TWEEN_SPEED = value
            end
        })
        
    elseif currentGame == "99NIGHTS" then
        -- 99 Nights Tabs with all fixes applied
        tabs.CreditsTab = Window:Tab({Title = "Credits", Icon = "info"})
        tabs.EspTab = Window:Tab({Title = "ESP", Icon = "eye"})
        tabs.PlayerTab = Window:Tab({Title = "Player", Icon = "user"})
        tabs.CreaturesTab = Window:Tab({Title = "Creatures", Icon = "zap"})
        tabs.WorldTab = Window:Tab({Title = "World Features", Icon = "globe"})
        tabs.AutoGrindTab = Window:Tab({Title = "Auto Grind", Icon = "circle-play"})
        
        -- Credits Tab
        tabs.CreditsTab:Section({Title = "Team Credits"})
        tabs.CreditsTab:Paragraph({
            Title = "Script Developers",
            Desc = "• 生まれ変わった"
        })
        tabs.CreditsTab:Paragraph({
            Title = "Script Contributors",
            Desc = "• None"
        })
        tabs.CreditsTab:Paragraph({
            Title = "Testers",
            Desc = "• None"
        })
        
        tabs.CreditsTab:Section({Title = "More Details"})
        tabs.CreditsTab:Paragraph({
            Title = "Script Developers",
            Desc = "Responsible for creating and maintaining the entire script codebase, implementing new features, and ensuring compatibility across different games."
        })
        tabs.CreditsTab:Paragraph({
            Title = "Script Contributors",
            Desc = "Community members who contribute code improvements, bug fixes, and feature suggestions to enhance the script's functionality."
        })
        tabs.CreditsTab:Paragraph({
            Title = "Testers",
            Desc = "Dedicated individuals who test new features, report bugs, and provide feedback to ensure the script works reliably across different scenarios."
        })
        
        -- ESP Tab
        tabs.EspTab:Section({Title = "Creature ESP System"})
        
        local creatureESPDropdown = tabs.EspTab:Dropdown({
            Title = "Creatures",
            Values = scanWorkspaceForCreatures(),
            Multi = false,
            Default = 1,
            Callback = function(value)
                selectedESPCreature = value or ""
            end
        })
        
        task.spawn(function()
            while task.wait(5) do
                if creatureESPDropdown then
                    local newCreatures = scanWorkspaceForCreatures()
                    creatureESPDropdown:SetValues(newCreatures)
                end
            end
        end)
        
        tabs.EspTab:Toggle({
            Title = "ESP Creatures",
            Desc = "Add line and box on selected creature with distance and name",
            Default = false,
            Callback = function(state)
                if state and selectedESPCreature ~= "" then
                    enableCreatureESP(selectedESPCreature)
                else
                    espEnabled = false
                    if not allESPEnabled and not playerESPEnabled then
                        disableAllESP()
                    end
                end
            end
        })
        
        tabs.EspTab:Toggle({
            Title = "ESP All Creatures",
            Desc = "Add line and box on all creatures with distance and names",
            Default = false,
            Callback = function(state)
                allESPEnabled = state
                if state then
                    enableAllCreatureESP()
                else
                    if not espEnabled and not playerESPEnabled then
                        disableAllESP()
                    end
                end
            end
        })
        
        tabs.EspTab:Toggle({
            Title = "ESP Players",
            Desc = "Add line and box on players with distance and usernames",
            Default = false,
            Callback = function(state)
                playerESPEnabled = state
                if state then
                    enableAllPlayerESP()
                else
                    for targetPlayer, _ in pairs(playerESPData) do
                        removeESPFromPlayer(targetPlayer)
                    end
                    playerESPData = {}
                    if not espEnabled and not allESPEnabled then
                        stopESPAutoRefresh()
                    end
                end
            end
        })
        
        -- FIXED Player Tab 
        tabs.PlayerTab:Section({Title = "Movement System"})
        
        tabs.PlayerTab:Slider({
            Title = "Speed",
            Step = 1,
            Value = {
                Min = 1,
                Max = 100,
                Default = 16,
            },
            Callback = function(value)
                updatePlayerSpeed(value)
            end
        })
        
        tabs.PlayerTab:Slider({
            Title = "Jump Power",
            Step = 1,
            Value = {
                Min = 1,
                Max = 200,
                Default = 50,
            },
            Callback = function(value)
                updatePlayerJumpPower(value)
            end
        })
        
        tabs.PlayerTab:Toggle({
            Title = "Float",
            Desc = "Uses CFrame + BodyVelocity for smooth floating",
            Default = false,
            Callback = function(state)
                if state then startFly()
                else
                    stopFly()
                end
            end
        })
        
        tabs.PlayerTab:Slider({
            Title = "Float Speed",
            Step = 1,
            Value = {
                Min = 1,
                Max = 200,
                Default = 50,
            },
            Callback = function(value)
                flySpeed = value
            end
        })
        
        tabs.PlayerTab:Toggle({
            Title = "Noclip",
            Desc = "Walk through walls with anti-cheat bypass",
            Default = false,
            Callback = function(state)
                if state then
                    enableNoclip99()
                else
                    disableNoclip99()
                end
            end
        })
        
        tabs.PlayerTab:Section({Title = "Player Teleportation"})
        
        local function getOnlinePlayersFor99Nights()
            local playerList = {}
            for _, plr in pairs(Players:GetPlayers()) do
                if plr ~= player and plr.Character and plr.Character:FindFirstChild("HumanoidRootPart") then
                    table.insert(playerList, plr.Name)
                end
            end
            return playerList
        end
        
        local playerTeleportDropdown = tabs.PlayerTab:Dropdown({
            Title = "Select Player to Teleport To",
            Values = getOnlinePlayersFor99Nights(),
            Multi = false,
            Default = 1,
            Callback = function(value)
                selectedPlayerForTP = value or ""
            end
        })
        
        task.spawn(function()
            while task.wait(3) do
                if playerTeleportDropdown then
                    local newPlayers = getOnlinePlayersFor99Nights()
                    playerTeleportDropdown:SetValues(newPlayers)
                    
                    if selectedPlayerForTP ~= "" then
                        local found = false
                        for _, name in pairs(newPlayers) do
                            if name == selectedPlayerForTP then
                                found = true
                                break
                            end
                        end
                        if not found then
                            selectedPlayerForTP = ""
                        end
                    end
                end
            end
        end)
        
        tabs.PlayerTab:Button({
            Title = "Teleport to Player",
            Desc = "Instantly teleport to selected player",
            Callback = function()
                if selectedPlayerForTP ~= "" then
                    teleportToPlayer(selectedPlayerForTP)
                end
            end
        })
        
        tabs.PlayerTab:Button({
            Title = "Tween to Player",
            Desc = "Smoothly tween to selected player",
            Callback = function()
                if selectedPlayerForTP ~= "" then
                    tweenToPlayer(selectedPlayerForTP)
                end
            end
        })
        
        -- FIXED Creatures Tab with working hitbox
        tabs.CreaturesTab:Section({Title = "Dynamic Creature System"})
        
        local creatureDropdown = tabs.CreaturesTab:Dropdown({
            Title = "Select Creature",
            Values = scanWorkspaceForCreatures(),
            Multi = false,
            Default = 1,
            Callback = function(value)
                selectedCreature = value or "Bear"
            end
        })
        
        task.spawn(function()
            while task.wait(5) do
                if creatureDropdown then
                    local newCreatures = scanWorkspaceForCreatures()
                    creatureDropdown:SetValues(newCreatures)
                end
            end
        end)
        
        tabs.CreaturesTab:Slider({
            Title = "Hitbox Size",
            Step = 1,
            Value = {
                Min = 1,
                Max = 10000,
                Default = 70,
            },
            Callback = function(value)
                hitboxSize = value
            end
        })
        
        tabs.CreaturesTab:Button({
            Title = "Show Visible Hitbox",
            Desc = "Display red box around selected creature",
            Callback = function()
                createHitboxVisualization(selectedCreature, hitboxSize)
            end
        })
        
        tabs.CreaturesTab:Button({
            Title = "Modify Creature Hitbox",
            Desc = "Create invisible hitbox (hits only 1 animal at a time)",
            Callback = function()
                modifyCreatureHitbox(selectedCreature, hitboxSize)
            end
        })
        
        tabs.CreaturesTab:Button({
            Title = "Modify ALL Creatures",
            Desc = "Apply hitbox to all creatures (1 of each type)",
            Callback = function()
                local allCreatures = scanWorkspaceForCreatures()
                local totalModified = 0
                
                for _, creatureName in pairs(allCreatures) do
                    if modifyCreatureHitbox(creatureName, hitboxSize) then
                        totalModified = totalModified + 1
                    end
                    task.wait(0.2)
                end
            end
        })
        
        tabs.CreaturesTab:Button({
            Title = "Reset All Hitboxes",
            Desc = "Restore all creatures to original sizes",
            Callback = function()
                resetAllHitboxes()
            end
        })
        
        tabs.CreaturesTab:Button({
            Title = "Hide Visualization",
            Desc = "Remove hitbox visualization",
            Callback = function()
                for _, visual in pairs(hitboxVisualization) do
                    if visual and visual.Parent then
                        visual:Destroy()
                    end
                end
                hitboxVisualization = {}
            end
        })
        
        -- World Features Tab
        tabs.WorldTab:Section({Title = "Map Features"})
        
        tabs.WorldTab:Toggle({
            Title = "Highlight Map",
            Desc = "Toggle map brightness for better visibility",
            Default = false,
            Callback = function(state)
                if state ~= mapHighlightEnabled then
                    toggleMapHighlight()
                end
            end
        })
        
        tabs.WorldTab:Section({Title = "Dynamic Item Spawning"})
        
        local itemDropdown = tabs.WorldTab:Dropdown({
            Title = "Select Item to Spawn",
            Values = scanWorkspaceForItems(),
            Multi = false,
            Default = 1,
            Callback = function(value)
                selectedItem = value or ""
            end
        })
        
        task.spawn(function()
            while task.wait(5) do
                if itemDropdown then
                    local newItems = scanWorkspaceForItems()
                    itemDropdown:SetValues(newItems)
                end
            end
        end)
        
        tabs.WorldTab:Button({
            Title = "Spawn Selected Item",
            Desc = "Spawns the selected item - FIXED for logs teleportation",
            Callback = function()
                if selectedItem ~= "" then
                    spawnSelectedItem(selectedItem)
                end
            end
        })
        
        tabs.WorldTab:Button({
            Title = "Clear All Spawned Items",
            Desc = "Remove all spawned items",
            Callback = function()
                if selectedItem ~= "" then
                    local removed = 0
                    for _, obj in pairs(workspace:GetChildren()) do
                        if obj.Name == selectedItem or obj.Name == "Log" or obj.Name == "Logs" then
                            obj:Destroy()
                            removed = removed + 1
                        end
                    end
                end
            end
        })
        
        tabs.WorldTab:Section({Title = "Automated Systems"})
        
        tabs.WorldTab:Toggle({
            Title = "Auto Cut Small Trees",
            Desc = "FIXED: Auto cut trees - player floats in front of tree and waits for completion",
            Default = false,
            Callback = function(state)
                if state then
                    startAutoCutTrees()
                else
                    stopAutoCutTrees()
                end
            end
        })
        
        tabs.WorldTab:Button({
            Title = "Scan for Small Trees",
            Desc = "List all small trees found in workspace",
            Callback = function()
                local trees = scanWorkspaceForSmallTrees()
                for i, tree in pairs(trees) do
                    local sizeText = "Unknown"
                    if tree:IsA("Part") then
                        sizeText = tostring(tree.Size)
                    elseif tree:IsA("Model") and tree:FindFirstChildOfClass("BasePart") then
                        sizeText = tostring(tree:FindFirstChildOfClass("BasePart").Size)
                    end
                    if i >= 20 then
                        break
                    end
                end
            end
        })
        
        -- NEW Auto Grind Tab
        tabs.AutoGrindTab:Section({Title = "Gem Grinding System"})
        
        tabs.AutoGrindTab:Toggle({
            Title = "Auto Grind Gems",
            Desc = "Automatically collect gems and hop servers if none found",
            Default = false,
            Callback = function(state)
                if state then
                    startAutoGemGrinder()
                else
                    stopAutoGemGrinder()
                end
            end
        })
        
        tabs.AutoGrindTab:Button({
            Title = "Scan for Gems",
            Desc = "Check current server for gems",
            Callback = function()
                local gems = scanWorkspaceForGems()
            end
        })
        
        tabs.AutoGrindTab:Button({
            Title = "Hop Server",
            Desc = "Manually hop to new 99 Nights server",
            Callback = function()
                TeleportService:Teleport(NIGHTS_99_GAME_ID, player)
            end
        })
        
        tabs.AutoGrindTab:Section({Title = "General Collection"})
        
        tabs.AutoGrindTab:Button({
            Title = "Collect All Items",
            Desc = "Teleport all collectible items to player",
            Callback = function()
                if not player.Character or not player.Character:FindFirstChild("HumanoidRootPart") then
                    return
                end
                
                local playerPos = player.Character.HumanoidRootPart.Position
                local collected = 0
                
                for _, obj in pairs(workspace:GetDescendants()) do
                    if obj:IsA("Part") then
                        local name = obj.Name:lower()
                        if name:find("wood") or name:find("log") or name:find("logs") or name:find("item") or 
                           name:find("coin") or name:find("gem") or name:find("crystal") or
                           name:find("berry") or name:find("meat") or name:find("bone") then
                            obj.Position = playerPos + Vector3.new(0, collected * 0.5, 0)
                            collected = collected + 1
                            
                            if collected >= 50 then break end
                        end
                    end
                end
            end
        })
        
        tabs.AutoGrindTab:Button({
            Title = "Scan Workspace",
            Desc = "List all creatures and items in workspace",
            Callback = function()
                local foundCreatures = scanWorkspaceForCreatures()
                local foundItems = scanWorkspaceForItems()
                local foundPlayers = scanWorkspaceForPlayers()
            end
        })
    end
end

-- Enhanced Toggle Button
local function createToggleButton()
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "LostToggle"
    screenGui.Parent = game.CoreGui
    screenGui.ResetOnSpawn = false

    local button = Instance.new("ImageButton")
    button.Size = isMobile and UDim2.new(0, 80, 0, 80) or UDim2.new(0, 70, 0, 70)
    button.Position = UDim2.new(0, 50, 0, 50)
    button.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
    button.BackgroundTransparency = 0.2
    button.Image = "rbxassetid://122913243559549"
    button.Parent = screenGui
    
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0.5, 0)
    corner.Parent = button
    
    local stroke = Instance.new("UIStroke")
    stroke.Thickness = 3
    stroke.Color = Color3.new(1, 1, 1)
    stroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
    stroke.Parent = button
    
    local dragging = false
    local dragStart = nil
    local startPos = nil
    
    button.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = true
            dragStart = input.Position
            startPos = button.Position
        end
    end)
    
    UserInputService.InputChanged:Connect(function(input)
        if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
            local delta = input.Position - dragStart
            button.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
        end
    end)
    
    UserInputService.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = false
        end
    end)
    
    local isOpen = true
    button.MouseButton1Click:Connect(function()
        if Window then
            if isOpen then
                Window:Close()
                button.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
                button.BackgroundTransparency = 0.5
                isOpen = false
            else
                Window:Open()
                button.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
                button.BackgroundTransparency = 0.2
                isOpen = true
            end
        end
    end)
end

-- Enhanced Key System with Settings
if isKeySaved() then
    task.spawn(function()
        createIntroScreen()
        task.wait(4)
        createHub()
        task.wait(2)
        createToggleButton()
    end)
else
    task.spawn(function()
        createIntroScreen()
        task.wait(4)
        
        local keyGui = Instance.new("ScreenGui")
        keyGui.Name = "LostKeySystem"
        keyGui.Parent = player.PlayerGui
        keyGui.ResetOnSpawn = false
        
        local frameSize = isMobile and UDim2.new(0, 380, 0, 420) or UDim2.new(0, 420, 0, 400)
        
        local frame = Instance.new("Frame")
        frame.Size = frameSize
        frame.Position = UDim2.new(0.5, -frameSize.X.Offset/2, 0.5, -frameSize.Y.Offset/2)
        frame.BackgroundColor3 = Color3.fromRGB(15, 15, 15)
        frame.BorderSizePixel = 0
        frame.Parent = keyGui
        
        local corner = Instance.new("UICorner")
        corner.CornerRadius = UDim.new(0, 20)
        corner.Parent = frame
        
        local stroke = Instance.new("UIStroke")
        stroke.Color = Color3.fromRGB(60, 60, 60)
        stroke.Thickness = 2
        stroke.Parent = frame
        
        local gradient = Instance.new("UIGradient")
        gradient.Color = ColorSequence.new{
            ColorSequenceKeypoint.new(0, Color3.fromRGB(15, 15, 15)),
            ColorSequenceKeypoint.new(0.7, Color3.fromRGB(25, 15, 15)),
            ColorSequenceKeypoint.new(1, Color3.fromRGB(15, 15, 15))
        }
        gradient.Parent = frame
        
        local gameTitle = currentGame == "MM2" and "MM2 Exclusive Edition" or "99 Nights Edition"
        local welcomeMessage = currentGame == "MM2" and "Ready for MM2 domination?" or "Ready for 99 Nights survival?"
        
        local title = Instance.new("TextLabel")
        title.Size = UDim2.new(0, frameSize.X.Offset - 70, 0, 50)
        title.Position = UDim2.new(0, 35, 0, 25)
        title.BackgroundTransparency = 1
        title.Text = "Lost Hub"
        title.TextColor3 = Color3.new(1, 1, 1)
        title.TextSize = isMobile and 28 or 32
        title.Font = Enum.Font.GothamBold
        title.TextXAlignment = Enum.TextXAlignment.Left
        title.Parent = frame
        
        local subtitle = Instance.new("TextLabel")
        subtitle.Size = UDim2.new(0, frameSize.X.Offset - 70, 0, 20)
        subtitle.Position = UDim2.new(0, 35, 0, 70)
        subtitle.BackgroundTransparency = 1
        subtitle.Text = gameTitle
        subtitle.TextColor3 = Color3.fromRGB(150, 150, 150)
        subtitle.TextSize = isMobile and 11 or 13
        subtitle.Font = Enum.Font.Gotham
        subtitle.TextXAlignment = Enum.TextXAlignment.Left
        subtitle.Parent = frame
        
        local inputWidth = frameSize.X.Offset - 70
        
        local keyInput = Instance.new("TextBox")
        keyInput.Size = UDim2.new(0, inputWidth, 0, isMobile and 40 or 35)
        keyInput.Position = UDim2.new(0, 35, 0, 110)
        keyInput.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        keyInput.TextColor3 = Color3.new(0, 0, 0)
        keyInput.PlaceholderText = "Enter your key here..."
        keyInput.PlaceholderColor3 = Color3.fromRGB(100, 100, 100)
        keyInput.Text = ""
        keyInput.TextSize = isMobile and 16 or 14
        keyInput.Font = Enum.Font.Gotham
        keyInput.TextXAlignment = Enum.TextXAlignment.Left
        keyInput.Parent = frame
        
        local inputCorner = Instance.new("UICorner")
        inputCorner.CornerRadius = UDim.new(0, 8)
        inputCorner.Parent = keyInput
        
        local buttonWidth = (inputWidth - 20) / 2
        local buttonHeight = isMobile and 40 or 35
        
        local submitBtn = Instance.new("TextButton")
        submitBtn.Size = UDim2.new(0, buttonWidth, 0, buttonHeight)
        submitBtn.Position = UDim2.new(0, 35, 0, isMobile and 170 or 160)
        submitBtn.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        submitBtn.Text = "Submit Key"
        submitBtn.TextColor3 = Color3.fromRGB(0, 0, 0)
        submitBtn.TextSize = isMobile and 16 or 14
        submitBtn.Font = Enum.Font.GothamBold
        submitBtn.Parent = frame
        
        local submitCorner = Instance.new("UICorner")
        submitCorner.CornerRadius = UDim.new(0, 8)
        submitCorner.Parent = submitBtn
        
        local getKeyBtn = Instance.new("TextButton")
        getKeyBtn.Size = UDim2.new(0, buttonWidth, 0, buttonHeight)
        getKeyBtn.Position = UDim2.new(0, 45 + buttonWidth, 0, isMobile and 170 or 160)
        getKeyBtn.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        getKeyBtn.Text = "Get Key"
        getKeyBtn.TextColor3 = Color3.fromRGB(0, 0, 0)
        getKeyBtn.TextSize = isMobile and 16 or 14
        getKeyBtn.Font = Enum.Font.GothamBold
        getKeyBtn.Parent = frame
        
        local getKeyCorner = Instance.new("UICorner")
        getKeyCorner.CornerRadius = UDim.new(0, 8)
        getKeyCorner.Parent = getKeyBtn
        
        -- Game teleport buttons
        local mm2TeleportBtn = Instance.new("TextButton")
        mm2TeleportBtn.Size = UDim2.new(0, buttonWidth, 0, buttonHeight)
        mm2TeleportBtn.Position = UDim2.new(0, 35, 0, isMobile and 230 or 210)
        mm2TeleportBtn.BackgroundColor3 = Color3.fromRGB(40, 167, 69)
        mm2TeleportBtn.Text = "Join MM2"
        mm2TeleportBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
        mm2TeleportBtn.TextSize = isMobile and 16 or 14
        mm2TeleportBtn.Font = Enum.Font.GothamBold
        mm2TeleportBtn.Parent = frame
        
        local mm2TeleportCorner = Instance.new("UICorner")
        mm2TeleportCorner.CornerRadius = UDim.new(0, 8)
        mm2TeleportCorner.Parent = mm2TeleportBtn
        
        local nightsTeleportBtn = Instance.new("TextButton")
        nightsTeleportBtn.Size = UDim2.new(0, buttonWidth, 0, buttonHeight)
        nightsTeleportBtn.Position = UDim2.new(0, 45 + buttonWidth, 0, isMobile and 230 or 210)
        nightsTeleportBtn.BackgroundColor3 = Color3.fromRGB(138, 43, 226)
        nightsTeleportBtn.Text = "Join 99 NIGHTS"
        nightsTeleportBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
        nightsTeleportBtn.TextSize = isMobile and 16 or 14
        nightsTeleportBtn.Font = Enum.Font.GothamBold
        nightsTeleportBtn.Parent = frame
        
        local nightsTeleportCorner = Instance.new("UICorner")
        nightsTeleportCorner.CornerRadius = UDim.new(0, 8)
        nightsTeleportCorner.Parent = nightsTeleportBtn
        
        local welcome = Instance.new("TextLabel")
        welcome.Size = UDim2.new(0, inputWidth, 0, 25)
        welcome.Position = UDim2.new(0, 35, 0, isMobile and 290 or 270)
        welcome.BackgroundTransparency = 1
        welcome.Text = "Welcome (" .. player.Name .. ")"
        welcome.TextColor3 = Color3.new(1, 1, 1)
        welcome.TextSize = isMobile and 18 or 16
        welcome.Font = Enum.Font.GothamBold
        welcome.TextXAlignment = Enum.TextXAlignment.Left
        welcome.Parent = frame
        
        local welcomeDesc = Instance.new("TextLabel")
        welcomeDesc.Size = UDim2.new(0, inputWidth, 0, 20)
        welcomeDesc.Position = UDim2.new(0, 35, 0, isMobile and 315 or 295)
        welcomeDesc.BackgroundTransparency = 1
        welcomeDesc.Text = welcomeMessage
        welcomeDesc.TextColor3 = Color3.fromRGB(150, 150, 150)
        welcomeDesc.TextSize = isMobile and 14 or 12
        welcomeDesc.Font = Enum.Font.Gotham
        welcomeDesc.TextXAlignment = Enum.TextXAlignment.Left
        welcomeDesc.Parent = frame
        
        -- Premium button
        local premiumBtn = Instance.new("TextButton")
        premiumBtn.Size = UDim2.new(0, inputWidth, 0, buttonHeight)
        premiumBtn.Position = UDim2.new(0, 35, 0, isMobile and 350 or 330)
        premiumBtn.BackgroundColor3 = Color3.fromRGB(255, 215, 0)
        premiumBtn.Text = "Buy Premium Key"
        premiumBtn.TextColor3 = Color3.fromRGB(0, 0, 0)
        premiumBtn.TextSize = isMobile and 16 or 14
        premiumBtn.Font = Enum.Font.GothamBold
        premiumBtn.Parent = frame
        
        local premiumCorner = Instance.new("UICorner")
        premiumCorner.CornerRadius = UDim.new(0, 8)
        premiumCorner.Parent = premiumBtn
        
        -- Make draggable
        local dragging = false
        local dragStart = nil
        local startPos = nil
        
        frame.InputBegan:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
                dragging = true
                startPos = frame.Position
                dragStart = input.Position
            end
        end)
        
        UserInputService.InputChanged:Connect(function(input)
            if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
                local delta = input.Position - dragStart
                frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
            end
        end)
        
        UserInputService.InputEnded:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
                dragging = false
            end
        end)
        
        -- Button functionality
        submitBtn.MouseButton1Click:Connect(function()
            if keyInput.Text == REQUIRED_KEY then
                saveKey()
                keyGui:Destroy()
                createHub()
                task.spawn(function()
                    task.wait(2)
                    createToggleButton()
                end)
            else
                keyInput.Text = ""
                keyInput.PlaceholderText = "Invalid key! Try again..."
                submitBtn.BackgroundColor3 = Color3.fromRGB(200, 200, 200)
                task.wait(2)
                keyInput.PlaceholderText = "Enter your key here..."
                submitBtn.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            end
        end)
        
        getKeyBtn.MouseButton1Click:Connect(function()
            if setclipboard then
                setclipboard("https://discord.gg/BvYXdXFwjV")
                keyInput.PlaceholderText = "Discord link copied! Get key from server"
                getKeyBtn.BackgroundColor3 = Color3.fromRGB(200, 200, 200)
            else
                keyInput.PlaceholderText = "Visit: discord.gg/BvYXdXFwjV"
            end
            task.wait(3)
            keyInput.PlaceholderText = "Enter your key here..."
            getKeyBtn.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        end)
        
        mm2TeleportBtn.MouseButton1Click:Connect(function()
            TeleportService:Teleport(142823291, player)
        end)
        
        nightsTeleportBtn.MouseButton1Click:Connect(function()
            TeleportService:Teleport(NIGHTS_99_LOBBY_ID, player)
        end)
        
        premiumBtn.MouseButton1Click:Connect(function()
            if setclipboard then
                setclipboard("https://discord.gg/BvYXdXFwjV")
                keyInput.PlaceholderText = "Premium Discord copied! Join for premium features"
            else
                keyInput.PlaceholderText = "Visit discord for premium: discord.gg/BvYXdXFwjV"
            end
            task.wait(3)
            keyInput.PlaceholderText = "Enter your key here..."
        end)
        
        keyInput.FocusLost:Connect(function(enterPressed)
            if enterPressed then
                submitBtn.MouseButton1Click:Fire()
            end
        end)
    end)
end

-- Auto-cleanup on character respawn
player.CharacterAdded:Connect(function()
    task.wait(1)
    if isCollecting then
        enableNoclip()
    end
    if isAutoShooting then
        enableNoclip()
    end
    if noclipEnabled then
        enableNoclip99()
    end
    if isFlying then
        startFly()
    end
    
    updatePlayerSpeed(playerSpeed)
    updatePlayerJumpPower(playerJumpPower)
end)
